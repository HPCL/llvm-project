import re
import lit.formats

# The OpenMP version required by the OpenACC implementation.
config.substitutions.append(('%fopenmp-version', '-fopenmp-version=51'))

if config.has_libatomic:
    config.substitutions.append(('%libatomic', ' -latomic'))

config.substitutions.append(('%run-if-x86_64',
                             '' if config.clang_acc_test_exe_x86_64 else ':'))
config.substitutions.append(('%run-if-ppc64le',
                             '' if config.clang_acc_test_exe_ppc64le else ':'))
config.substitutions.append(('%run-if-nvptx64',
                             '' if config.clang_acc_test_exe_nvptx64 else ':'))
config.substitutions.append(('%run-x86_64-triple',
                             config.clang_acc_test_exe_x86_64_triple))
config.substitutions.append(('%run-ppc64le-triple',
                             config.clang_acc_test_exe_ppc64le_triple))
config.substitutions.append(('%run-nvptx64-triple',
                             config.clang_acc_test_exe_nvptx64_triple))

config.substitutions.append(('%acc-version', '202011'))

config.substitutions.append(('%acc-includes',
                            ('-isystem {build}/projects/openmp/libacc2omp/src' +
                             ' -isystem {build}/projects/openmp/runtime/src')
                            .format(build=config.llvm_obj_root)))
config.substitutions.append(('%acc-libs', '-lacc2omp'))

# Use lit's internal shell to help guarantee test portability.
config.test_format = lit.formats.ShTest(execute_external=False)

# Generally, we need to be aware of dead code in our tests, especially because
# unused static functions might be test cases that are accidentally not invoked.
for i, (key, value) in enumerate(config.substitutions):
    if re.match(r'.*%\\bclang\\b.*', key) != None:
        value += ' -Werror=unused-function'
        config.substitutions[i] = (key, value)
